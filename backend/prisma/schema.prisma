// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb" // Changed from "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId // Changed for MongoDB
  name         String
  email        String   @unique
  summary      String?
  location     String?
  profileImage String?
  cvUrl        String?
  // Store CV file path
  socialLinks  Json? // Store social links as JSON
  // skills      Json?    // Removed deprecated field
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  userSkills UserSkill[]

  @@map("users")
}

model Project {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId // Changed for MongoDB
  title        String
  description  String
  imageUrl     String?
  githubUrl    String?
  demoUrl      String?
  technologies String[] // Changed Json? to String[] for MongoDB array support
  featured     Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("projects")
}

model Certificate {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  organization   String
  date           DateTime
  certificateUrl String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("certificates")
}

model Contact {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId // Changed for MongoDB
  name      String
  email     String
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())

  @@map("contacts")
}

model Skill {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId // Changed for MongoDB
  name      String   @unique
  logoUrl   String?
  logoSvg   String? // MongoDB handles large strings well, @db.LongText removed
  category  String?
  // e.g., "Frontend", "Backend", "Database", "DevOps"
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relation to user skills
  userSkills UserSkill[]

  @@map("skills")
}

model UserSkill {
  id      String @id @default(auto()) @map("_id") @db.ObjectId // Changed for MongoDB
  userId  String @db.ObjectId // Relates to User's ObjectId
  skillId String @db.ObjectId // Relates to Skill's ObjectId

  // Relations
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  skill Skill @relation(fields: [skillId], references: [id], onDelete: Cascade)

  // Removed @@unique constraint, MongoDB handles this implicitly or requires explicit index creation if needed
  @@map("user_skills")
}

model Admin {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId // Changed for MongoDB
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("admins")
}
